#!/bin/sh

# set -x

[ "$1" = "start" ] || exit 0
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
PATH=/usr/local/bin:/usr/bin:/bin:/sbin
. /etc/init.d/init_utilities
MODULES_DIR="/lib/modules"
KERNEL_VERSION="$(uname -r)"
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
/etc/init.d/init_idtsal start
/etc/init.d/pal start
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
echo "### Start platform configuration"
insmod ${MODULES_DIR}/platform_config.ko
platform_config_app load /etc/platform_config/ce4200.hcfg
platform_config_app load /etc/platform_config/ce4200/memory_layout_1G.hcfg platform.memory.layout
# ----------------------------------------------------------------------
# Temp solution to over-ride media_base_address on 7401
# Fixme: this should go away once we have machine specific platform config
# files (or a solution to parse the memmap=XXX options on the kernel
# command line and determine media_base_address automatically).  
media_base_mb="594"
echo "Setting board specific media_base_address: ${media_base_mb} MB"
platform_config_app set_int platform.memory.media_base_address $((media_base_mb*1024*1024))
# ----------------------------------------------------------------------
# Warning: pci_query opens /proc/platform_config, so can only
#          be run after platform_config.ko has been loaded.
# ----------------------------------------------------------------------
REVISION_ID=$(pci_query -read dev_addr=0:0:0,offset=8,size=1 2>/dev/null)
REVISION_ID=$(echo $REVISION_ID | tr -s '[:upper:]' '[:lower:]')

if [ "$REVISION_ID" = "c" ] || [ "$REVISION_ID" = "0c" ]  || [ "$REVISION_ID" = "1" ]
then
  platform_config_app load /etc/platform_config/ce4200_D0.hcfg
fi
# Configure the PMRs and base addresses from the memory layout
config_pmrs "SOC_NAME_CE4200"
# Add the docsis ddr to the memory layout if required
platform_config_app execute platform.startup
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
/etc/init.d/devmem start
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
echo "### Start ALSA"
try_command insmod ${MODULES_DIR}/${KERNEL_VERSION}/kernel/sound/soundcore.ko
try_command insmod ${MODULES_DIR}/${KERNEL_VERSION}/kernel/sound/core/snd.ko
try_command insmod ${MODULES_DIR}/${KERNEL_VERSION}/kernel/sound/core/snd-timer.ko
try_command insmod ${MODULES_DIR}/${KERNEL_VERSION}/kernel/sound/core/snd-page-alloc.ko
try_command insmod ${MODULES_DIR}/${KERNEL_VERSION}/kernel/sound/core/snd-pcm.ko
try_command insmod ${MODULES_DIR}/${KERNEL_VERSION}/kernel/sound/core/seq/snd-seq-device.ko
try_command insmod ${MODULES_DIR}/${KERNEL_VERSION}/kernel/sound/core/snd-hwdep.ko
try_command insmod ${MODULES_DIR}/${KERNEL_VERSION}/kernel/sound/core/snd-rawmidi.ko
try_command insmod ${MODULES_DIR}/${KERNEL_VERSION}/kernel/sound/usb/snd-usbmidi-lib.ko
try_command insmod ${MODULES_DIR}/${KERNEL_VERSION}/kernel/sound/usb/snd-usb-audio.ko
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
/etc/init.d/cosai start
/etc/init.d/osal start
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
echo "### Start GPIO"
GPIO_LIB_NAME=libidl_gpio.so
GPIO_SHIM_LIB_NAME=libidl_gpio_shim.so
ln -sf /lib/${GPIO_SHIM_LIB_NAME} /lib/${GPIO_LIB_NAME}
insmod ${MODULES_DIR}/idl_gpio_shim.ko
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
/etc/init.d/thermal start
/etc/init.d/avcap_core start
/etc/init.d/sven start
/etc/init.d/system_utils start
/etc/init.d/graphics_2d start
/etc/init.d/flashtool start
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
# nvram  - calling the script for now
# echo "*nvram*"
# /etc/init.d/nvram start
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
echo "### Start idl I2C"
insmod ${MODULES_DIR}/${KERNEL_VERSION}/kernel/drivers/i2c/i2c-dev.ko
insmod ${MODULES_DIR}/idl_i2c.ko
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
echo "### Start idl smartcard"
insmod ${MODULES_DIR}/idl_smartcard.ko
make_dev_minor scard scard0
make_dev_minor scard scard1 1
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
echo "### Start idl SPI"
insmod ${MODULES_DIR}/idl_spi.ko
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
/etc/init.d/init_iosf start
/etc/init.d/init_pwm start
/etc/init.d/clock_control start
/etc/init.d/intel_ce_pm start
/etc/init.d/init_pic_uart start
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
echo "### Staring mspod"
try_command insmod /lib/modules/mspod_drv.ko
make_dev mspod mspod
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
/etc/init.d/sec start
/etc/init.d/sec_fw_1100 start
/etc/init.d/smd_core start
/etc/init.d/gentimer start
/etc/init.d/display start
/etc/init.d/graphics start
/etc/init.d/hdmi start
/etc/init.d/smd start
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
echo "### Start alsa_shim"
insmod ${MODULES_DIR}/alsa_shim.ko
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
echo "### Start smd_avcap_shim*"
insmod ${MODULES_DIR}/ismdavcap_shim.ko
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
# Temp solution to disable HDCP on 7401
echo "### Disabling HDCP"
/bin/gdl_samples/portattrs -port 2 -set 0 0
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
# Temp solution to enable USB on 7401
echo "### Enable USB"
/usr/dtsbin/gpio write -number 78 -output -data 1
/usr/dtsbin/gpio write -number 79 -output -data 1
/usr/dtsbin/memory write -width 4 -addr 0xdf818000 -data 0xc0003c0c
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
echo "### Setup display mode"
/bin/tvmode 720p
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------
sleep 5
