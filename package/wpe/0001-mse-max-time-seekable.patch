diff --git a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.h b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.h
index 799d680..d8b9e9c 100644
--- a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.h
+++ b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.h
@@ -104,7 +104,7 @@ class MediaPlayerPrivateGStreamer : public MediaPlayerPrivateGStreamerBase {
     void fillTimerFired();
 
     std::unique_ptr<PlatformTimeRanges> buffered() const override;
-    float maxTimeSeekable() const override;
+    virtual float maxTimeSeekable() const override;
     bool didLoadingProgress() const override;
     unsigned long long totalBytes() const override;
     float maxTimeLoaded() const override;
diff --git a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamerMSE.cpp b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamerMSE.cpp
index 4f15b09..acaf500 100644
--- a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamerMSE.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamerMSE.cpp
@@ -2158,6 +2158,23 @@ void MediaSourceClientGStreamerMSE::clearPlayerPrivate()
     m_playerPrivate = nullptr;
 }
 
+float MediaPlayerPrivateGStreamerMSE::maxTimeSeekable() const
+{
+    if (m_errorOccured)
+        return 0.0f;
+
+    LOG_MEDIA_MESSAGE("maxTimeSeekable");
+    float result = duration();
+    // infinite duration means live stream
+    if (isinf(result)) {
+        MediaTime maxBufferedTime = buffered()->maximumBufferedTime();
+        // Return the highest end time reported by the buffered attribute.
+        result = maxBufferedTime.isValid() ? maxBufferedTime.toFloat() : 0;
+    }
+
+    return result;
+}
+
 } // namespace WebCore
 
 #endif // USE(GSTREAMER)
diff --git a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamerMSE.h b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamerMSE.h
index 28f88f7..131b68b 100644
--- a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamerMSE.h
+++ b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamerMSE.h
@@ -60,6 +60,7 @@ class MediaPlayerPrivateGStreamerMSE : public MediaPlayerPrivateGStreamer {
     float duration() const override;
     void setRate(float) override;
     std::unique_ptr<PlatformTimeRanges> buffered() const override;
+    virtual float maxTimeSeekable() const override;
 
     void sourceChanged() override;
 
